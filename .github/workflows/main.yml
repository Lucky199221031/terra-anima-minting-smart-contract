# This is a basic workflow to help you get started with Actions

name: Basic

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.60.0
          target: wasm32-unknown-unknown
          override: true

      - name: github-actions-nodejs
        # You may pin to the exact commit or the version.
        # uses: thonatos/github-actions-nodejs@50c6667f26d2aaa41206e1d43c58682913ad6d71
        uses: thonatos/github-actions-nodejs@v0.1.1

      - name: setup-docker
        # You may pin to the exact commit or the version.
        # uses: docker-practice/actions-setup-docker@9fafeb38361d5d48e5afc207293715e023b6cfe0
        uses: docker-practice/actions-setup-docker@1.0.9


      - name: setup-rust-optimizer
        # You may pin to the exact commit or the version.
        # uses: docker-practice/actions-setup-docker@9fafeb38361d5d48e5afc207293715e023b6cfe0
        run: docker pull cosmwasm/rust-optimizer:0.12.5

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: unit-test
          args: --locked
        env:
          RUST_BACKTRACE: 1

      - name: Compile WASM contract
        uses: actions-rs/cargo@v1
        with:
          command: wasm
          args: --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

      - name: Build WASM contract
        uses: actions-rs/cargo@v1
        with:
          command: build
